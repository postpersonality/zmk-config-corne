/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define HOST_OS 1
#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/russian.dtsi"

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&to 0         &kp B  &kp L  &kp D       &kp C  &kp V        &kp J    &kp Y  &kp O          &kp U          &kp COMMA   &kp DELETE
&kp TAB       &kp N  &kp R  &kp T       &kp S  &kp G        &kp P    &kp H  &kp A          &kp E          &kp I       &kp SLASH
&kp LEFT_ALT  &kp X  &kp Q  &kp M       &kp W  &kp Z        &kp K    &kp F  &kp SQT        &kp SEMICOLON  &kp PERIOD  &kp LEFT_CONTROL
                            &kp LSHIFT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1        &kp N2          &kp N3        &kp N4        &kp N5          &kp N6  &kp N7    &kp N8       &kp N9         &kp N0     &kp BSPC
&kp LEFT_CONTROL  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &kp LEFT  &kp DOWN     &kp UP         &kp RIGHT  &kp RIGHT_GUI
&kp LSHFT         &bt BT_CLR    &bt BT_CLR_ALL  &none         &out OUT_BLE  &out OUT_USB    &none   &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &kp DELETE
                                                &trans        &trans        &trans          &trans  &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &none     &none   &none     &none     &none        &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &none     &none   &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &ru_y   &ru_ts  &ru_u   &ru_k   &ru_ye    &ru_n   &ru_g   &ru_sh  &ru_shch  &ru_z  &ru_kh
&trans  &ru_f   &ru_bi  &ru_v   &ru_a   &ru_p     &ru_r   &ru_o   &ru_l   &ru_d   &ru_zh  &ru_e
&trans  &ru_ya  &ru_ch  &ru_s   &ru_m   &ru_i     &ru_t   &ru_soft  &ru_b  &ru_yu  &ru_yo  &ru_hard
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
